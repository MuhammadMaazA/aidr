"""Initial migration with all tables

Revision ID: 4aab01913677
Revises: 
Create Date: 2025-08-07 20:52:47.021369

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2.types

# revision identifiers, used by Alembic.
revision = '4aab01913677'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('damage_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disaster_id', sa.Integer(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geography(geometry_type='POINT', dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('damage_type', sa.String(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_damage_reports_location', 'damage_reports', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_damage_reports_id'), 'damage_reports', ['id'], unique=False)
    op.create_table('disaster_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geography(geometry_type='POINT', dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_disaster_events_location', 'disaster_events', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_disaster_events_id'), 'disaster_events', ['id'], unique=False)
    op.create_index(op.f('ix_disaster_events_name'), 'disaster_events', ['name'], unique=False)
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('resource_type', sa.String(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geography(geometry_type='POINT', dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('current_load', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_resources_location', 'resources', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_resources_id'), 'resources', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disaster_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('assigned_resources', sa.Text(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geography(geometry_type='POINT', dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_location', 'tasks', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index('idx_tasks_location', table_name='tasks', postgresql_using='gist')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_resources_id'), table_name='resources')
    op.drop_index('idx_resources_location', table_name='resources', postgresql_using='gist')
    op.drop_table('resources')
    op.drop_index(op.f('ix_disaster_events_name'), table_name='disaster_events')
    op.drop_index(op.f('ix_disaster_events_id'), table_name='disaster_events')
    op.drop_index('idx_disaster_events_location', table_name='disaster_events', postgresql_using='gist')
    op.drop_table('disaster_events')
    op.drop_index(op.f('ix_damage_reports_id'), table_name='damage_reports')
    op.drop_index('idx_damage_reports_location', table_name='damage_reports', postgresql_using='gist')
    op.drop_table('damage_reports')
    # ### end Alembic commands ###